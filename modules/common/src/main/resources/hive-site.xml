<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>

<!-- Hive Configuration can either be stored in this file or in the hadoop configuration files  -->
<!-- that are implied by Hadoop setup variables.                                                -->
<!-- Aside from Hadoop setup variables - this file is provided as a convenience so that Hive    -->
<!-- users do not have to edit hadoop configuration files (that may be managed as a centralized -->
<!-- resource).                                                                                 -->

<!-- Hive Execution Parameters -->

<property>
   <name>hive.jobname.length</name>
   <value>250</value>
</property>

<property>
  <name>hive.root.logger</name>
  <value>INFO,console</value>
  <description>Root loggers</description>
</property>

<property>
<name>hive.exec.submitviachild</name>
<value>false</value>
<description>IP address (or fully-qualified domain name) and port of the metastore host</description>
</property>


<property>
<name>hive.metastore.uris</name>
<value>thrift://jobs-dev-sched2:9084</value>
<description>IP address (or fully-qualified domain name) and port of the metastore host</description>
</property>

<property>
  <name>hive.metastore.ds.retry.attempts</name>
  <value>20</value>
  <description>The number of times to retry a metastore call if there were a connection error</description>
</property>

<property>
  <name>hive.metastore.ds.retry.interval</name>
  <value>5000</value>
  <description> Number of miliseconds to wait between attempting</description>
</property>

<property>
  <name>hive.metastore.connect.retries</name>
  <value>200</value>
  <description>Number of retries while opening a connection to metastore</description>
</property>

<property>
  <name>hive.metastore.failure.retries</name>
  <value>20</value>
  <description> Number of times to retry a Thrift metastore call upon failure</description>
</property>

<property>
  <name>hive.metastore.client.connect.retry.delay</name>
  <value>10</value>
  <description> Number of seconds the client should wait between connection attempts</description>
</property>

<property>
  <name>hive.metastore.client.socket.timeout</name>
  <value>60</value>
  <description>Socket timeout for the client connection (in seconds)</description>
</property>


<property>
  <name>hive.exec.scratchdir</name>
  <value>/tmp/hive-scratch-jieren/scratch-${hive.session.id}</value>
  <description>Scratch space for Hive jobs</description>
</property>



<!--
<property>
  <name>hive.support.concurrency</name>
  <value>true</value>
  <description>Whether hive supports concurrency or not. A zookeeper instance must be up and running for the default hive lock manager to support read-write locks.</description>
</property>


<property>
  <name>hive.zookeeper.quorum</name>
  <value>jobs-dev-zoo1,jobs-dev-zoo2,jobs-dev-zoo3</value>
  <description>The list of zookeeper servers to talk to. This is only needed for read/write locks.</description>
</property>

<property>
  <name>hive.zookeeper.client.port</name>
  <value>2181</value>
  <description>The port of zookeeper servers to talk to. This is only needed for read/write locks.</description>
</property>



<property>
  <name>hive.lock.numretries</name>
  <value>100</value>
  <description>The number of times you want to try to get all the locks</description>
</property>

<property>
  <name>hive.unlock.numretries</name>  
  <value>10</value>
  <description>The number of times you want to retry to do one unlock</description>
</property>

<property>
  <name>hive.lock.sleep.between.retries</name>
  <value>60</value>
  <description>The sleep time (in seconds) between various retries</description>
</property>



<property>
  <name>hive.zookeeper.namespace</name>
  <value>hive_zookeeper_namespace</value>
  <description>The parent node under which all zookeeper nodes are created.</description>
</property>

<property>
  <name>hive.zookeeper.clean.extra.nodes</name>
  <value>false</value>
  <description>Clean extra nodes at the end of the session.</description>
</property>
-->




<!--
<property>
  <name>javax.jdo.option.ConnectionURL</name>
  <value>jdbc:mysql://jobs-dev-sched1/hive_meta_db</value>

  <description>JDBC connect string for a JDBC metastore</description>
</property>
-->

<property>
  <name>javax.jdo.option.ConnectionDriverName</name>
  <value>com.mysql.jdbc.Driver</value>
  <description>Driver class name for a JDBC metastore</description>
</property>

<property>
  <name>javax.jdo.option.ConnectionUserName</name>
  <value>hive_maxwell</value>
  <description>Username for connecting to the MySQL database</description>
</property>


<property>
  <name>javax.jdo.option.ConnectionPassword</name>
  <value>6r95JKefhg</value>
  <description>Password for connecting to the MySQL database</description>
</property>


<property>
  <name>hive.hwi.war.file</name>
  <value>/usr/lib/hive/lib/hive-hwi-${dw.hive.version}.war</value>
  <description>This is the WAR file with the jsp content for Hive Web Interface</description>
</property>

    <property>
  <name>hive.metastore.warehouse.dir</name>
  <value>/user/hive/warehouse</value>
  <description>location of default database for the warehouse</description>
</property>

 <property>
   <name>hbase.zookeeper.quorum</name>
   <value>jobs-dev-zoo1,jobs-dev-zoo2,jobs-dev-zoo3</value>
   <description>Connect to remote Hive Server, don't create local value</description>
 </property>
 
 <property>
   <name>booger.goobertype</name>
   <value>Gooberlicious</value>
   <description>Goober to you, fella !!!</description>
 </property>
 


</configuration>
